// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded zlib format compressed contents of module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
